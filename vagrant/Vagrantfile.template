# -*- mode: ruby -*-
# vi: set ft=ruby:

# Created by Pierre Mavro 
# Modified by Leonardo Canessa
#   with Docker as the default provider

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# These are configuration variables used in the script
PERSISTENT_DATA_LOCATION = "data/"
POSTGRESQL_USER_PASSWORD = ""

# You can override those vars by using shell environment vars 
vb_box = (ENV['VAGRANT_VB_BOX'] || 'iknite/trusty64')
# Workaround for mitchellh/vagrant#1867 / source: https://groups.google.com/forum/#!topic/vagrant-up/XIxGdm78s4I
if ARGV[1] and \
    (ARGV[1].split('=')[0] == "--provider" or ARGV[2])
    provider = (ARGV[1].split('=')[1] || ARGV[2])
else
    provider = (ENV['VAGRANT_DEFAULT_PROVIDER'] || :docker).to_sym
end
 
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
 
    # VirtualBox settings
    if "#{provider}" == "virtualbox"
        config.vm.provider "virtualbox" do |vb|
            config.vm.box = "#{vb_box}"
        end
    end
 
    # Docker settings
    if "#{provider}" == "docker"
        config.vm.provider "docker" do |d|
            d.remains_running = true
            d.vagrant_machine = "dockerhostvm"
            d.vagrant_vagrantfile = "./DockerHost_Vagrantfile"
            #d.has_ssh = true
            #config.ssh.username = "root"
        end
    end
 
    # PHP servers
#    config.vm.define 'php1' do |machine|
#        config.vm.host_name = 'php1'
#        config.vm.provider "virtualbox" do |vb|
#            vb.customize ["modifyvm", :id, "--memory", "384"]
#        end
#        config.vm.provider "docker" do |dckr|
#            dckr.build_dir = "./apache"
#        end
#        config.vm.network "public_network", :bridge => 'wlan0'
#        config.ssh.forward_agent = true
#    end
 
    # Database servers
    config.vm.define 'persistent' do |machine|
        machine.vm.host_name = 'persistent'
        machine.vm.synced_folder "#{PERSISTENT_DATA_LOCATION}", "/var/lib/postgresql/data"
        machine.vm.provider "virtualbox" do |vb|
            vb.customize ["modifyvm", :id, "--memory", "512"]
        end
        machine.vm.provider "docker" do |dckr|
            dckr.build_dir = "./persistent"
            dckr.name = "persistent"
            dckr.remains_running = false
            dckr.cmd = [
                "/bin/echo 'Persistent Data Container for db'"
            ]
        end
    end

    config.vm.define 'database1' do |machine|
        machine.vm.host_name = 'database1'
        machine.vm.provider "virtualbox" do |vb|
            vb.customize ["modifyvm", :id, "--memory", "512"]
        end
        machine.vm.provider "docker" do |dckr|
            dckr.build_dir = "./database"
            dckr.create_args = [
                "--volumes-from", "persistent"
            ]
            dckr.env = {
                "POSTGRES_PASSWORD" => "#{POSTGRESQL_USER_PASSWORD}"
            }
        end
    end
end
